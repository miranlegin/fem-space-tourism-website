// general idea behind this parent grid is to be able to space out main content below the header and to make vertical spacing somewhat manageable, min-height is the key element here

.grid {
  width: min(100%, 69.375rem);
  margin-inline: auto;
  min-height: 100vh;
  display: grid;
  grid-template-rows: min-content 1fr;
}

.main-grid {
  @media (min-width: $bp-desktop) {
    display: grid;
    // 22.5rem = 360px, 35rem = 560px
    // grid-template-columns: repeat(2, minmax(22.5rem, 35rem));
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: min-content 1fr;
    column-gap: 30px;
  }
}

.header {
  position: relative;
  z-index: 1;
  margin-bottom: 1.5rem;

  @media (max-width: $until-tablet) {
    margin-top: 1.5rem;
    display: flex;
    justify-content: space-between;
  }

  @media (min-width: $bp-tablet) {
    margin-bottom: 2.5rem;
  }

  // thin navigation line on large screens
  @media (min-width: $bp-desktop) {
    margin-top: 2.5rem;
    margin-bottom: 5rem;
  }

  &::before {
    @media (min-width: $bp-desktop) {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      width: 42.8%;
      height: 1px;
      background: rgba(#fff, 0.25);
    }
  }

  // navigation background tablet and up
  &::after {
    @media (min-width: $bp-tablet) {
      content: '';
      position: absolute;
      z-index: -1;
      top: 0;
      height: 100%;
      background: rgba(#fff, 0.04);
      backdrop-filter: blur(2.5rem);
      left: 40%;
      right: -50vw;
    }
  }
}

.grid-left {
  // display: grid;
  display: flex;
  flex-direction: column;
  // padding-block: 5rem;
}

.grid-right {
  // display: grid;
  display: flex;
  flex-direction: column;
  // padding-block: 5rem;
}
